plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.dagger.hilt.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace rootProject.applicationId
    compileSdk rootProject.compileSdk

    defaultConfig {
        applicationId rootProject.applicationId
        minSdk rootProject.minSdk
        targetSdk rootProject.targetSdk
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString(),
                              "room.incremental":"true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding = true
    }
    kapt {
        generateStubs = true
    }
    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout"

    //Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "androidx.constraintlayout:constraintlayout-solver:$constraint_solver"

    // Hilt-Dagger
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"

    //Room database
    implementation "androidx.room:room-runtime:$room"
    // To use Coroutine features with room
    implementation "androidx.room:room-ktx:$room"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room"
    // To use Kotlin Symbol Processing (KSP)
    //ksp "androidx.room:room-compiler:$room"
    // For Paging 3 with Room DB
    implementation "androidx.room:room-paging:$room"

    //Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    //RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerview"

    //Retrofit for Network operation
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"

    //OkHttpClient3 for network call with retrofit
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"

    //OkHttp Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Fragment ktx
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"

    // Activity ktx
    implementation "androidx.activity:activity-ktx:$activity_ktx"

    // Paging-3 for long-length list
    implementation "androidx.paging:paging-runtime-ktx:$paging_ktx"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"

    // Coil
    implementation "io.coil-kt:coil:2.4.0"

    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"
}